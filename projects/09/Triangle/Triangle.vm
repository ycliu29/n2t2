function Triangle.new 1
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 2
call Array.new 1
pop local 0
push constant 0
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
pop this 3
push pointer 0
return
function Triangle.draw 1
push argument 0
pop pointer 0
push constant 1
pop local 0
push argument 1
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
push constant 0
push this 3
add
pop pointer 1
push that 0
call Math.multiply 2
add
push this 1
call Screen.drawLine 4
pop temp 0
label WHILE_EXP0
push local 0
push this 2
gt
not
not
if-goto WHILE_END0
push this 0
push this 1
push local 0
push constant 1
push this 3
add
pop pointer 1
push that 0
call Math.multiply 2
add
push this 0
push this 2
push local 0
sub
push constant 0
push this 3
add
pop pointer 1
push that 0
call Math.multiply 2
add
push this 1
push local 0
push constant 1
push this 3
add
pop pointer 1
push that 0
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Triangle.check 3
push argument 0
pop pointer 0
push argument 1
push argument 3
push constant 0
push argument 4
add
pop pointer 1
push that 0
call Math.multiply 2
add
pop local 1
push argument 2
push argument 3
push constant 1
push argument 4
add
pop pointer 1
push that 0
call Math.multiply 2
add
pop local 2
push argument 1
push constant 508
lt
push argument 1
push constant 160
gt
and
push argument 2
push constant 252
lt
and
push argument 2
push constant 3
gt
and
push local 1
push constant 508
lt
and
push local 1
push constant 160
gt
and
push local 2
push constant 252
lt
and
push local 2
push constant 3
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Triangle.moveup 1
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 1
push constant 10
sub
push this 2
push this 3
call Triangle.check 5
pop local 0
push local 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push this 1
push constant 10
sub
pop this 1
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Triangle.movedown 1
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 1
push constant 10
add
push this 2
push this 3
call Triangle.check 5
pop local 0
push local 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push this 1
push constant 10
add
pop this 1
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Triangle.moveright 1
push argument 0
pop pointer 0
push pointer 0
push this 0
push constant 10
add
push this 1
push this 2
push this 3
call Triangle.check 5
pop local 0
push local 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push this 0
push constant 10
add
pop this 0
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Triangle.moveleft 1
push argument 0
pop pointer 0
push pointer 0
push this 0
push constant 10
sub
push this 1
push this 2
push this 3
call Triangle.check 5
pop local 0
push local 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push this 0
push constant 10
sub
pop this 0
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Triangle.inc 1
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 1
push this 2
push constant 10
add
push this 3
call Triangle.check 5
pop local 0
push local 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push this 2
push constant 10
add
pop this 2
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Triangle.dec 1
push argument 0
pop pointer 0
push pointer 0
push this 0
push this 1
push this 2
push constant 10
sub
push this 3
call Triangle.check 5
pop local 0
push local 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push this 2
push constant 10
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push constant 10
sub
pop this 2
label IF_FALSE1
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE0
push constant 0
return
function Triangle.turn 2
push argument 0
pop pointer 0
push constant 0
push this 3
add
pop pointer 1
push that 0
push constant 1
eq
push constant 1
push this 3
add
pop pointer 1
push that 0
and
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
pop local 0
push constant 1
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push this 0
push this 1
push this 2
push local 0
call Triangle.check 5
pop local 1
push constant 1
push this 3
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push constant 1
push this 3
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE1
push constant 0
return
label IF_FALSE0
push constant 0
push this 3
add
pop pointer 1
push that 0
push constant 1
eq
push constant 1
push this 3
add
pop pointer 1
push that 0
and
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
pop local 0
push constant 0
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push this 0
push this 1
push this 2
push local 0
call Triangle.check 5
pop local 1
push constant 0
push this 3
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push constant 0
push this 3
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE3
push constant 0
return
label IF_FALSE2
push constant 0
push this 3
add
pop pointer 1
push that 0
push constant 1
neg
eq
push constant 1
push this 3
add
pop pointer 1
push that 0
and
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 3
pop local 0
push constant 1
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push this 0
push this 1
push this 2
push local 0
call Triangle.check 5
pop local 1
push constant 1
push this 3
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push constant 1
push this 3
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE5
push constant 0
return
label IF_FALSE4
push constant 0
push this 3
add
pop pointer 1
push that 0
push constant 1
neg
eq
push constant 1
push this 3
add
pop pointer 1
push that 0
and
push constant 1
neg
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 3
pop local 0
push constant 0
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push this 0
push this 1
push this 2
push local 0
call Triangle.check 5
pop local 1
push constant 0
push this 3
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push pointer 0
push constant 0
call Triangle.draw 2
pop temp 0
push constant 0
push this 3
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push constant 0
not
call Triangle.draw 2
pop temp 0
label IF_FALSE7
push constant 0
return
label IF_FALSE6
push constant 0
return
